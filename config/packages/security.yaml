security:
    providers:
        in_memory:
            memory:
                users: {  }
    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            methods: {  }
            user_checker: security.user_checker
            stateless: false
        main:
            anonymous:
                lazy: true
                secret: null
            guard:
                authenticators:
                    - App\Service\Security\LoginFormAuthenticator
                entry_point: null
            logout:
                path: logout
                target: home
                csrf_parameter: _csrf_token
                csrf_token_id: logout
                invalidate_session: true
                delete_cookies: {  }
                handlers: {  }
            methods: {  }
            security: true
            user_checker: security.user_checker
            stateless: false
            form_login:
                login_path: login
    encoders:
        App\Domain\Entity\User:
            algorithm: bcrypt
            migrate_from: {  }
            hash_algorithm: sha512
            key_length: 40
            ignore_case: false
            encode_as_base64: true
            iterations: 5000
            cost: 24
            memory_cost: null
            time_cost: null
    access_control:
        - { path: '^/shop/', roles: ROLE_ADMIN }
        - { path: '^/', roles: IS_AUTHENTICATED_ANONYMOUSLY }
       
    access_decision_manager:
        strategy: affirmative
        allow_if_all_abstain: false
        allow_if_equal_granted_denied: true
    access_denied_url: null
    session_fixation_strategy: migrate
    hide_user_not_found: true
    always_authenticate_before_granting: false
    erase_credentials: true
